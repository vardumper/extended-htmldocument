#!/usr/bin/env php
<?php

// Settings
$protectedBranches = [
    'master',
    'main',
    'develop',
];
$allowFailuresInProtectedBranches = false;
$allowFailuresInOtherBranches = true;


// Define the red color code
$redColor = "\033[31m";
$yellowColor = "\033[33m";
$greenColor = "\033[32m";
$resetColor = "\033[0m";
$orangeColor = "\033[1;31m";
$brownColor = "\033[33m";


$failureNeedles = [
    'FAILURES!',
    'Fatal error:',
    'ERROR!',
];

exec('git rev-parse --abbrev-ref HEAD', $branchNameOutput, $branchNameReturnCode);
if ($branchNameReturnCode !== 0) {
    echo "{$redColor}Failed to get the current branch name.{$resetColor}" . PHP_EOL;
    exit(1);
}
$currentBranch = trim(implode(PHP_EOL, $branchNameOutput));

echo "Running tests on branch: {$yellowColor}$currentBranch{$resetColor}" . PHP_EOL;
exec('./vendor/bin/phpunit --colors=always --display-warnings', $output, $returnCode);
print(implode(PHP_EOL, $output) . PHP_EOL); // first show output
if ($returnCode != 0) {
    // ignore warnings
    foreach($output as $line) {
        foreach ($failureNeedles as $needle) {
            if (strpos($line, $needle) !== false) {
                if (in_array($currentBranch, $protectedBranches) && $allowFailuresInProtectedBranches === false) {
                    echo "{$redColor}Pushing to protected branch {$currentBranch} is not allowed with failures.{$resetColor}" . PHP_EOL;
                    exit(1);
                }
                if (!in_array($currentBranch, $protectedBranches) && $allowFailuresInOtherBranches === false) {
                    echo "{$redColor}Pushing to {$currentBranch} is not allowed.{$resetColor}" . PHP_EOL;
                    exit(1);
                }
                if (!in_array($currentBranch, $protectedBranches) && $allowFailuresInOtherBranches === true) {
                    echo "{$orangeColor}Pushing to {$currentBranch} with test errors or failures.{$resetColor}" . PHP_EOL;
                    exit(0);
                }
            }
        }
    }
    echo "{$orangeColor}Pushing to {$currentBranch} with test warnings.{$resetColor}" . PHP_EOL;
    exit(0); // allow anything else
}
echo "{$greenColor}Pushing.{$resetColor}" . PHP_EOL;
exit(0);
